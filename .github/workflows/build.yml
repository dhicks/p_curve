# This is a basic workflow to help you get started with Actions

name: build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #where:
    #runs-on: ubuntu-latest
    #steps:
      #- run: Rscript -e "Sys.getenv('R_LIBS_USER')"
      #- run: which curl
      #- run: echo $PATH
      #- run: ls /usr/local/lib/pkgconfig/

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Install pandoc using setup-pandoc
      # NB After updating Makefile, switch to pandoc 2.11
      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.11' # The pandoc version to download (if necessary) and use.
      #- run: echo "# Test" | pandoc -t html
  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Cache dependencies
      - name: Cache R packages
        uses: actions/cache@v2
        env:
          cache-name: cache-packages
        with:
          path: /home/runner/R/x86_64-pc-linux-gnu-library/4.0
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('DESCRIPTION') }}

      # Install dependencies from DESCRIPTION
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
          sudo apt-get install libgit2-dev
          Rscript -e "dir.create(Sys.getenv('R_LIBS_USER'), recursive = TRUE)"
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"

      # Reproduce the analysis
      - name: make script
        run: make script
      
      # Push the reproduced analysis back up to gh-pages
      - name: Push reproduced analysis
        run: |
          mv scripts/run_metas.html index.html
          git config --global user.name "Dan Hicks"
          git config --global user.email "hicks.daniel.j@gmail.com"
          git checkout -b gh-pages
          git add index.html
          git commit -m "Reproduced analysis"
          git push --set-upstream origin gh-pages --force
